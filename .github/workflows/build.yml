name: Build

on: push

jobs:
  build_api:
    name: API install, lint & build
    runs-on: ubuntu-latest
    container: rust:slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache common cargo crates
        uses: actions/cache@v2
        env:
          cache-name: cache-common-cargo-crates
        with:
          path: common/target
          key: ${{ runner.os }}-${{ hashFiles('common/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Cache lambda cargo crates
        uses: actions/cache@v2
        env:
          cache-name: cache-api-cargo-crates
        with:
          path: api_lambda/target
          key: ${{ runner.os }}-${{ hashFiles('api_lambda/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Add project deps
        run: make ci_install
      - name: Lint
        run: t=api_lambda make clippy
      - name: Build
        run: t=api_lambda make build
  build_broadcast:
    name: Broadcast install, lint & build
    runs-on: ubuntu-latest
    container: rust:slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache common cargo crates
        uses: actions/cache@v2
        env:
          cache-name: cache-common-cargo-crates
        with:
          path: common/target
          key: ${{ runner.os }}-${{ hashFiles('common/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Cache lambda cargo crates
        uses: actions/cache@v2
        env:
          cache-name: cache-broadcast-cargo-crates
        with:
          path: broadcast_lambda/target
          key: ${{ runner.os }}-${{ hashFiles('broadcast_lambda/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Add project deps
        run: make ci_install
      - name: Lint
        run: t=broadcast_lambda make clippy
      - name: Build
        run: t=broadcast_lambda make build
